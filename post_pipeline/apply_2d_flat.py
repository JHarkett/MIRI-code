#===========================================================
"""
Applies the 2d flat generated by gen_2d_flat.py

Usage
		apply_2d_flat.py

"""
#===========================================================
# Inputs


tile_dirs = ['july/centre', 'july/east', 'aug/centre', 'aug/west']
final_dir = 'stage3_flat'
flat_name = 'flat_all_epoch.fits'
file = 'Level3_ch2-medium_s3d.fits'


#===========================================================
# Imports


import numpy as np
from astropy.io import fits
import glob
import os


#===========================================================
# Main


band_pre = file.replace('Level3_','')
band = band_pre.replace('_s3d.fits','')

print(band)

file_nav = file.replace('s3d','s3d_nav')

length_t = len(tile_dirs)

dithers = []

for kk in range(length_t):

	if not os.path.exists(tile_dirs[kk] + '/' + final_dir):
		os.mkdir(tile_dirs[kk] + '/' + final_dir)

	for ii in range(10):
		if os.path.exists(tile_dirs[kk] + '/stage3/d{}'.format(ii+1)):
			dithers.append(tile_dirs[kk] + '/stage3/d{}'.format(ii+1))
			if not os.path.exists(tile_dirs[kk] + '/' + final_dir):
				os.mkdir(tile_dirs[kk] + '/' + final_dir)
		for iii in range(3):
			if os.path.exists(tile_dirs[kk] + '/desaturation/group{aa}/stage3/d{bb}'.format(aa=iii+1,bb=ii+1)):
				dithers.append(tile_dirs[kk] + '/desaturation/group{aa}/stage3/d{bb}'.format(aa=iii+1,bb=ii+1))
				if not os.path.exists(tile_dirs[kk] + '/desaturation/group{}/'.format(iii+1) + final_dir):
					os.mkdir(tile_dirs[kk] + '/desaturation/group{}/'.format(iii+1) + final_dir)
length_d = len(dithers)

print('{} directories found\n'.format(length_d))

hdul_flat = fits.open('flat_files/' + band + '/' + flat_name)
flat_data = hdul_flat[0].data
hdul_flat.close()

dithers_nav = []

for kk in range(length_d):
	if os.path.exists(dithers[kk] + '_nav'):
		dithers_nav.append(dithers[kk] + '_nav')

length_dn = len(dithers_nav)

for kk in range(length_d):
	if not os.path.exists(dithers[kk].replace('stage3',final_dir)):
		os.mkdir(dithers[kk].replace('stage3',final_dir))

	hdul_unnav = fits.open(dithers[kk] + '/' + file)
	sci_unnav_data = hdul_unnav['SCI'].data
	hdul_unnav['SCI'].data = np.divide(sci_unnav_data,flat_data)
	hdul_unnav.writeto(dithers[kk].replace('stage3',final_dir) + '/' + file,overwrite=True)

for kk in range(length_dn):
	if not os.path.exists(dithers_nav[kk].replace('stage3',final_dir)):
		os.mkdir(dithers_nav[kk].replace('stage3',final_dir))

	hdul_nav = fits.open(dithers_nav[kk] + '/' + file_nav)
	sci_nav_data = hdul_nav['SCI'].data
	hdul_nav['SCI'].data = np.divide(sci_nav_data,flat_data)
	hdul_nav.writeto(dithers_nav[kk].replace('stage3',final_dir) + '/' + file_nav,overwrite=True)


#===========================================================


print('End of script\n')
